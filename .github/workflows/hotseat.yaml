name: Autoresolve HOTSEAT Conflicts
on: 
  push:
    branches: '*'

jobs:
  autoresolve_conflicts:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Get list of open PRs
        id: get_prs
        run: |
          
          PR_LIST=$(gh pr list --json number,headRefName --jq '.[].headRefName')
          echo "::set-output name=pr_list::$PR_LIST"

      - name: Autoresolve HOTSEAT conflicts
        run: |
          IFS=' ' read -r -a PR_ARRAY <<< "${{ steps.get_prs.outputs.pr_list }}"
          for BRANCH in "${PR_ARRAY[@]}"
          do
            echo "Checking out $BRANCH"
            git checkout "$BRANCH"
            echo "Pulling $BRANCH"
            git pull origin "$BRANCH"
            set -x
            echo "Starting if block" 
            if [ -n "$(git ls-files -u | grep -v HOTSEAT)" ]; then
              echo "Branch $BRANCH has conflicts beyond HOTSEAT. Skipping."
              git reset --hard HEAD
              continue
            fi
            echo "Ending first if block"
          
            if [ -n "$(git ls-files -u | grep HOTSEAT)" ]; then
              echo "Resolving HOTSEAT conflict in branch $BRANCH"
              echo "git checkout --theirs HOTSEAT"
              echo "git add HOTSEAT"
              echo 'git commit -m "ðŸ¤– HOTSEAT conflict autoresolved"'
              echo "git push origin $BRANCH"
            fi
          done
