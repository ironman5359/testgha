name: Production 🚀
on:
  push:
    branches:
      - main

jobs:
  branch_restriction:
    name: 🚦 Branch Restriction 🚦
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'icecream' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.CONFLICT_AUTORESOLVE }}

      - name: Check commit eligibility
        id: check_commit_eligibility
        env:
          ENVIRONMENT: ${{ env.ENVIRONMENT }}
          TIMEFRAME: 120
          GIST_ID: ${{ secrets.GIST_ID }}
        run: |
          # Get the existing commits from gist
          gist_content=$(curl -H "Authorization: token ${{ secrets.CONFLICT_AUTORESOLVE }}" https://api.github.com/gists/$GIST_ID)
          
          # Fetch the branch history to ensure we can find the right commit
          git fetch --no-tags --prune --depth=50 origin +refs/heads/*:refs/remotes/origin/*
          
          # Find the last commit on the branch before it was merged into main
          # This assumes your pull request merge strategy involves a merge commit
          
          SHA=$(git rev-parse HEAD^2 2> /dev/null) "DIRECTTOMAIN" 
          echo "SHA=$SHA" >> $GITHUB_ENV
          commit_timestamp=$(git show -s --format=%ct "$SHA")
          current_timestamp=$(date +%s)
          age_in_seconds=$((current_timestamp - commit_timestamp))
          
          if [[ "$SHA" == "DIRECTTOMAIN" ]]; then
            echo "✅ The branch was merged directly into main. Skipping the workflow."
            continue
          else
            if [[ "$gist_content" == *"$SHA"* ]]; then
              if (( age_in_seconds > ${{ env.TIMEFRAME }} )); then
                echo "❌ Error: The branch commit $SHA has already been run before and it's over the ${{ env.TIMEFRAME }} limit."
                echo "skip=true" >> $GITHUB_ENV
              else
                echo "ℹ️ Info: The branch commit $SHA is within the last ${{ env.TIMEFRAME }} seconds. Proceeding with the workflow."
                echo "skip=false" >> $GITHUB_ENV
              fi
            else
              echo "ℹ️ Info: The branch commit $SHA has never been run before. Updating sha file and proceeding with the workflow."
              echo "skip=false" >> $GITHUB_ENV
            fi
          fi
          
      - name: Update Gist File
        if: ${{ steps.check_commit_eligibility.outputs.skip != 'false' }}
        run: |
          # Install jq
          sudo apt-get update && sudo apt-get install -y jq
          
          # Fetch the existing content from gist
          existing_content=$(curl -H "Authorization: token ${{ secrets.CONFLICT_AUTORESOLVE }}" \
          "https://api.github.com/gists/$GIST_ID" | jq -r '.files["run_before.txt"].content')
          
          # Append new content
          new_content="$existing_content"$'\n'"$GITHUB_SHA"
          
          # Prepare the JSON payload using jq
          json_payload=$(jq -n \
                         --arg content "$new_content" \
                         '{files: {"run_before.txt": {content: $content}}}')
          
          # Update the Gist with the new content
          curl -X PATCH \
               -H "Authorization: token ${{ secrets.CONFLICT_AUTORESOLVE }}" \
               -H "Content-Type: application/json" \
               -d "$json_payload" \
               "https://api.github.com/gists/$GIST_ID"
  
  migration:
    name: 🏎💨 Production Migration 🏎💨
    environment: production
    runs-on: ubuntu-latest
    needs: branch_restriction
    env:
      GIST_ID: ${{ secrets.GIST_ID }}
    steps:
      - name: Set ENVIRONMENT to production
        run: echo "ENVIRONMENT=production" >> $GITHUB_ENV
        
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.CONFLICT_AUTORESOLVE }}
          
      - name: Showtime!
        id: showtime
        if: ${{ needs.branch_restriction.outputs.skip != 'true' }}
        run: |
          echo "🚀 Running the migration script..."