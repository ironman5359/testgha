name: Production 🚀
on:
  push:
    branches:
      - main

jobs:
  branch_restriction:
    name: 🚦 Branch Restriction 🚦
    runs-on: ubuntu-latest
    steps:
      - name: Set ENVIRONMENT to production
        run: echo "ENVIRONMENT=production" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.CONFLICT_AUTORESOLVE }}
          path: 'testgha'

      - name: Check the commit age
        id: check_commit_age
        env:
          ENVIRONMENT: ${{ env.ENVIRONMENT }}
          TIMEFRAME: 120
        run: |
          cd testgha
          # Fetch the branch history to ensure we can find the right commit
          git fetch --no-tags --prune --depth=50 origin +refs/heads/*:refs/remotes/origin/*
          # Find the last commit on the branch before it was merged into main
          # This assumes your pull request merge strategy involves a merge commit
          if [ ${{ env.ENVIRONMENT }} == 'icecream' ]; then
            echo "Info: Skipping the 24-hour check for the icecream environment."
            continue
          fi
          SHA=$(git rev-parse HEAD^2)
          echo "SHA=$SHA" >> $GITHUB_ENV
          commit_timestamp=$(git show -s --format=%ct "$SHA")
          current_timestamp=$(date +%s)
          age_in_seconds=$((current_timestamp - commit_timestamp))
          
          if (( age_in_seconds > ${{ env.TIMEFRAME }} )); then
            echo "⚠️ Warning: The branch commit ${{ env.SHA }} is older than ${{ env.TIMEFRAME }} seconds and has already run before. Skipping the workflow."
            echo "age_skip=true" >> $GITHUB_ENV
          else
            echo "ℹ️ Info: The branch commit ${{ env.SHA }} is within the last ${{ env.TIMEFRAME }} seconds. Proceeding with the workflow."
            echo "age_skip=false" >> $GITHUB_ENV
          fi
      - name: Checkout 'ironman5359/sha-storage' repository
        uses: actions/checkout@v4
        with:
          repository: 'ironman5359/sha-storage'
          fetch-depth: 0
          token: ${{ secrets.CONFLICT_AUTORESOLVE}}
          path: 'sha-storage'

      - name: Check if SHA exists
        id: sha_exists
        env:
          SHA_INPUT: ${{ steps.check_commit_age.outputs.sha }}
          AGE_SKIP: ${{ steps.check_commit_age.outputs.age_skip }}
          ENVIRONMENT: ${{ env.ENVIRONMENT }}
        run: |
          cd sha-storage
          if [ ${{ env.ENVIRONMENT }} == 'icecream' ]; then
            echo "Info: Skipping the SHA check for the icecream environment."
          else
            if [ $AGE_SKIP == 'true' ]; then
              SHA_INPUT=${{ steps.check_commit_age.outputs.sha }}
              if grep -q "$SHA_INPUT" shas.txt; then
                echo "❌ Error: The branch commit $SHA_INPUT has already been run before and it's over the $TIMELIMIT limit. 
                echo "Skipping the workflow."
                echo "skip=true" >> $GITHUB_OUTPUT
              else
                echo "ℹ️ Info: The branch commit $SHA_INPUT has never been run before. Updating sha file and proceeding with the workflow."
                 echo "$GITHUB_SHA" >>shas.txt
                 git config user.name "rayabot"
                 git config user.email "rayabot@rayatheapp.com"
                 git add shas.txt
                 git commit -m "Add $GITHUB_SHA to shas.txt"
                 git push
                 echo "skip=false" >> $GITHUB_OUTPUT
              fi      
            fi
          else 
             echo "ℹ️ Info: The branch commit $SHA_INPUT has never been run before even though it's over the time limit of $TIMELIMIT." 
             echo "Updating sha file and proceeding with the workflow."
             echo "$GITHUB_SHA" >>shas.txt
             git config user.name "rayabot"
             git config user.email "rayabot@rayatheapp.com"
             git add shas.txt
             git commit -m "Add $GITHUB_SHA to shas.txt"
             git push
             echo "skip=false" >> $GITHUB_OUTPUT
          fi
  migration:
    name: 🏎💨 Production Migration 🏎💨
    environment: production
    runs-on: ubuntu-latest
    needs: branch_restriction
    env:
      GIST_ID: ${{ secrets.GIST_ID }}
    steps:
      - name: Set ENVIRONMENT to production
        run: echo "ENVIRONMENT=production" >> $GITHUB_ENV
        
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.CONFLICT_AUTORESOLVE }}
          path: 'testgha'
          
      - name: Showtime!
        id: showtime
        if: ${{ needs.branch_restriction.outputs.skip != 'true' }}
        run: |
          echo "🚀 Running the migration script..."